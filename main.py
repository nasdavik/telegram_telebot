import telebot
from telebot import types
from auth_data import token
import json
import re
from gett_calendar import my_calendar


bot = telebot.TeleBot(token)


class MyBalance:
    def __init__(self):
        with open("balance.txt") as reader:
            for r in reader:
                self.balance = int(r)
        with open("BD.json", encoding="utf-8") as reaeder:
            data = json.load(reaeder)
            self.days = 0
            for i in data.values():
                if i == '–æ—Ç–ª–∏—á–Ω–æ': self.days += 1
                elif i == '–Ω–µ–ø–ª–æ—Ö–æ': self.days = self.days//2
                elif i == '–ø–ª–æ—Ö–æ': self.days = 0

    def rewriting(self):
        with open("BD.json", encoding="utf-8") as reaeder:
            data = json.load(reaeder)
            self.days = 0
            for i in data.values():
                if i == '–æ—Ç–ª–∏—á–Ω–æ': self.days += 1
                elif i == '–Ω–µ–ø–ª–æ—Ö–æ': self.days = self.days//2
                elif i == '–ø–ª–æ—Ö–æ': self.days = 0

    def gett_days(self):
        return self.days

    def gett_balance(self):
        return self.balance

    def plus(self):
        if self.days == 365: self.balance += 3000
        elif self.days == 180: self.balance += 1000
        elif self.days == 90: self.balance += 500
        elif self.days == 30: self.balance += 300
        elif self.days == 14: self.balance += 100
        elif self.days == 7: self.balance += 50
        with open("balance.txt", "w", encoding="utf-8") as writer: writer.write(str(self.gett_balance()))

    def minus(self, x):
        self.balance = self.balance - x
        with open("balance.txt", "w", encoding="utf-8") as writer: writer.write(str(self.gett_balance()))


katya = MyBalance()


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, —è –ø–æ—Å—Ç—Ä–∞–ª—Å—è —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª–µ–∑–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è —Ç–µ–±—è. –•–æ—Ç—å —ç—Ç–æ –∏ –º–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –Ω–∞–¥–µ—é—Å—å —Å–æ —Å–≤–æ–µ–π –∑–∞–¥–∞—á–µ–π –æ–Ω–∞ —Å–ø—Ä–∞–≤–∏—Ç—Å—è. –í—Å–µ —á—Ç–æ –º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è —è –ø–æ—Å—Ç–∞—Ä–∞–ª—Å—è —Ä–∞—Å–ø–∏—Å–∞—Ç—å –≤ /help")


@bot.message_handler(commands=['help'])
def help_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    write_down = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å üìù")
    balance = types.KeyboardButton("–ë–∞–ª–∞–Ω—Å üíµ")
    rewriter = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –¥–µ–Ω—å üìÖ")
    helping = types.KeyboardButton("–ü–æ–º–æ—â—å üõë")
    markup.add(write_down, rewriter, balance, helping)
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç –∑–∞ –ø—Ä–æ—à–ª—ã–µ –¥–Ω–∏, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å:\n"
                                      "- –ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç—á–µ—Ç 20.05.2019, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –¥–Ω–µ\n"
                                      "- –ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ú–∞–π 2019, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µc—è—Ü–µ –≤ –≥–æ–¥—É\n\n"
                                      "–ù—É –∏ –∫–Ω–æ–ø–æ—á–∫–∞–º–∏ –µ—â–µ –ø–æ–ª—å–∑—É–π—Å—è",
                                        reply_markup=markup)


@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text.lower() == "–∑–∞–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å üìù":
        bot.send_message(message.chat.id,
                         "–ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ - (–¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥). –ò –Ω–∞–ø–∏—Å–∞—Ç—å –∏—Ç–æ–≥ –¥–Ω—è (–û—Ç–ª–∏—á–Ω–æ, –ù–µ–ø–ª–æ—Ö–æ, –ü–ª–æ—Ö–æ). –ü—Ä–∏–º–µ—Ä: 20.05.2019 –û—Ç–ª–∏—á–Ω–æ")

    elif re.match(r"\d\d\.\d\d\.\d{4}", message.text.lower()):
        w = message.text.lower().split()
        try:
            t = {w[0]:w[1]}
        except:
            bot.send_message(message.chat.id,
                             "–ü–æ—Ö–æ–∂–µ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É. –°—Ç–æ–∏—Ç –ø–æ—Ä–æ–±—ã–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üôÇ")
        else:
            if w[1]=="–æ—Ç–ª–∏—á–Ω–æ" or w[1]=="–Ω–µ–ø–ª–æ—Ö–æ" or w[1]=="–ø–ª–æ—Ö–æ":
                with open("BD.json", encoding="utf-8") as reader:
                    data = json.load(reader)
                    if w[0] not in data:
                        data[w[0]] = w[1]
                        with open("BD.json", "w", encoding="utf-8") as writer:
                            json.dump(data, writer, ensure_ascii=False, indent=4)
                        bot.send_message(message.chat.id,
                                         "–û—Ç–ª–∏—á–Ω–æ, —è –≤—Å–µ –∑–∞–ø–∏—Å–∞–ª")
                        if w[1] == '–æ—Ç–ª–∏—á–Ω–æ': katya.days += 1
                        elif w[1] == '–Ω–µ–ø–ª–æ—Ö–æ': katya.days = katya.days//2
                        elif w[1] == '–ø–ª–æ—Ö–æ': katya.days = 0
                        katya.plus()
                    else:
                        bot.send_message(message.chat.id,
                                         "–•–º–º–º... ü§î\n–ü–æ—Ö–æ–∂–µ —É –º–µ–Ω—è –µ—Å—Ç—å –æ–± —ç—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –°—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ—Ä–æ–±—ã–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üëÄ")
            else:
                bot.send_message(message.chat.id, "–í —Ä–µ–∑—É–ª—Ç–∞—Ç–∞—Ö –¥–Ω—è –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å:\n"
                                                  "- –û—Ç–ª–∏—á–Ω–æ, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –≤—Ä–µ–¥–Ω–æ—Å—Ç–∏ –≤–æ–æ–±—â–µ –Ω–µ –ø–æ–µ–¥–∞–ª–∏—Å—å ‚úÖ\n"
                                                  "- –ù–µ–ø–ª–æ—Ö–æ, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–¥–Ω–æ—Å—Ç–µ–π –±—ã–ª–æ ‚ö†Ô∏è\n"
                                                  "- –ü–ª–æ—Ö–æ, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –≤—Ä–µ–¥–Ω–æ—Å—Ç–∏ –±—ã–ª–∏ ‚õî")

    elif re.match("–∏–∑–º–µ–Ω–∏—Ç—å –¥–µ–Ω—å üìÖ", message.text.lower()):
        bot.send_message(message.chat.id, "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ-–±—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ "
                                          "–¥–Ω—è, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É - \"–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å 02.07.2002 –û—Ç–ª–∏—á–Ω–æ\". "
                                          "–ü—Ä–æ—Å—Ç–æ –ø–∏—à–µ—à—å –¥–∞—Ç—É –∏ –Ω–∞ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å")

    elif re.match(r"–ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å \d\d\.\d\d\.\d{4} .*", message.text.lower()):
        rewrite = message.text.lower().split()
        with open("BD.json", encoding="utf-8") as for_rew:
            data_rew = json.load(for_rew)
        if rewrite[1] in data_rew:
            data_rew[rewrite[1]] = rewrite[2]
            with open("BD.json", "w", encoding="utf-8") as fr:
                json.dump(data_rew, fr, ensure_ascii=False, indent=4)
                bot.send_message(message.chat.id, "–í—Å–µ –≥–æ—Ç–æ–≤–æ!")
            katya.rewriting()
            katya.plus()
        else:
            bot.send_message(message.chat.id,
                             "–£–ø—Å, –æ—à–∏–±–æ—á–∫–∞. —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ –≤ —Ç–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏–∏. –≠—Ç–æ—Ç –¥–µ–Ω—å —Ç–æ—á–Ω–æ —É —Ç–µ–±—è –∑–∞–ø–∏—Å–∞–Ω?")


    elif re.match("–∫–∞–ª–µ–Ω–¥–∞—Ä—å", message.text.lower()):
        text = message.text.lower().split()
        try:
            bot.send_photo(message.chat.id, my_calendar(text[1], text[2]))
        except:
            bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ —É –º–µ–Ω—è –Ω–µ—Ç –æ–± —ç—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ –≤ —Ç–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—à–∏–±–∫–∞")

    elif re.search(r"–æ—Ç—á[–µ—ë]—Ç \d\d.\d\d.\d{4}", message.text.lower()):
        with open("BD.json", encoding="utf-8") as reader_2:
            mess = message.text.lower().split()
            date = json.load(reader_2)
            if mess[1] in date:
                if date[mess[1]] == "–æ—Ç–ª–∏—á–Ω–æ":
                    bot.send_message(message.chat.id, "–í —ç—Ç–æ—Ç  –¥–µ–Ω—å —Ç–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n–û—Ç–ª–∏—á–Ω–æ üü¢")
                elif date[mess[1]] == "–Ω–µ–ø–ª–æ—Ö–æ":
                    bot.send_message(message.chat.id, "–í —ç—Ç–æ—Ç  –¥–µ–Ω—å —Ç–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n–ù–µ–ø–ª–æ—Ö–æ üü°")
                elif date[mess[1]] == "–ø–ª–æ—Ö–æ":
                     bot.send_message(message.chat.id, "–í —ç—Ç–æ—Ç  –¥–µ–Ω—å —Ç–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n–ü–ª–æ—Ö–æ üî¥")
                else:
                    bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —è —ç—Ç–∏–º –¥–Ω–µ–º. –ù—É–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å –æ–± —ç—Ç–æ–º –î–∞–Ω–µ")
            else:
                bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –º–µ–Ω—è –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º –¥–Ω–µüòæ")

    elif message.text.lower() == "–±–∞–ª–∞–Ω—Å üíµ":
        bot.send_message(message.chat.id, f"–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {katya.gett_balance()}—Ä.")

    elif re.match("—Å–ø–∏—Å–∞—Ç—å", message.text.lower()):
        m = message.text.lower().split()
        if len(m) > 1:
            try:
                katya.minus(int(m[1]))
                bot.send_message(message.chat.id, f"–£—Å–ø–µ—à–Ω–æ! –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {katya.gett_balance()}—Ä.")
            except:
                bot.send_message(message.chat.id, "–í—ã—á–µ—Ç–∞–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä–µ–∫—Ç–Ω–æ")
        else:
            bot.send_message(message.chat.id, "–í —Ç–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞. –¢—ã –Ω–µ —É–∫–∞–∑–∞–ª —Å—É–º–º—É")

    elif re.match("–ø–æ–º–æ—â—å üõë", message.text.lower()):
        help_message(message)

    else:
        bot.send_message(message.chat.id, "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å. –£ —Ç–µ–±—è –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ü–æ–º–æ—â—å üõë (/help),  –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –µ–π –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏")


bot.polling(none_stop=True)